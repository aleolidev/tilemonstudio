tengo una serie de "objetos" con "pesos" que puedo meter en "bolsas", de cierta capacidad.

tengo una función _u_ que mapea bolsas a booleanos, indicando si son válidas o no, por su peso.

% tengo una función _p_ que me indica el "peso" de un objeto.

tengo una función _q_ que mapea bolsas de objetos y un objeto a booleanos, indicando si el objeto puede ir en la bolsa o no. q(bolsa, objeto) -> {0, 1}.

restricciones adicionales:
- una bolsa no puede llevar dos veces el mismo objeto.
- todos los objetos caben en una bolsa que sólo los contiene a ellos.
- un objeto no puede estar en dos bolsas a la vez.


Deseo llevarme TODOS los objetos en la menor cantidad de bolsas posibles.

% Relajemos el problema primero: deseo llevarme todos los objetos en algún arreglo de bolsas que me lo permita.

la solución trivial es, para un total de n objetos, llevar un objeto en cada bolsa.

hay a lo más X bolsas.

-----------------------
posibles optimizaciones:
  - eliminar subsets


-----------------------


c1: 1, 3, 4, 5, 7, 8, 10

c2: 1, 3, 6, 5, 7, 8, 10

c1 y c2 son igual de buenos, o malos.








